/* ! tailwindcss v3.0.24 | MIT License | https://tailwindcss.com */ /* 1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4) 2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116) */ *, ::before, ::after { box-sizing: border-box; /* 1 */ border-width: 0; /* 2 */ border-style: solid; /* 2 */ border-color: #e5e7eb; /* 2 */ } ::before, ::after { --tw-content: ''; } /* 1. Use a consistent sensible line-height in all browsers. 2. Prevent adjustments of font size after orientation changes in iOS. 3. Use a more readable tab size. 4. Use the user's configured `sans` font-family by default. */ html { line-height: 1.5; /* 1 */ -webkit-text-size-adjust: 100%; /* 2 */ -moz-tab-size: 4; /* 3 */ -o-tab-size: 4; tab-size: 4; /* 3 */ font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */ } /* 1. Remove the margin in all browsers. 2. Inherit line-height from `html` so users can set them as a class directly on the `html` element. */ body { margin: 0; /* 1 */ line-height: inherit; /* 2 */ } /* 1. Add the correct height in Firefox. 2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655) 3. Ensure horizontal rules are visible by default. */ hr { height: 0; /* 1 */ color: inherit; /* 2 */ border-top-width: 1px; /* 3 */ } /* Add the correct text decoration in Chrome, Edge, and Safari. */ abbr:where([title]) { -webkit-text-decoration: underline dotted; text-decoration: underline dotted; } /* Remove the default font size and weight for headings. */ h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; } /* Reset links to optimize for opt-in styling instead of opt-out. */ a { color: inherit; text-decoration: inherit; } /* Add the correct font weight in Edge and Safari. */ b, strong { font-weight: bolder; } /* 1. Use the user's configured `mono` font family by default. 2. Correct the odd `em` font sizing in all browsers. */ code, kbd, samp, pre { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */ font-size: 1em; /* 2 */ } /* Add the correct font size in all browsers. */ small { font-size: 80%; } /* Prevent `sub` and `sup` elements from affecting the line height in all browsers. */ sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } sub { bottom: -0.25em; } sup { top: -0.5em; } /* 1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297) 2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016) 3. Remove gaps between table borders by default. */ table { text-indent: 0; /* 1 */ border-color: inherit; /* 2 */ border-collapse: collapse; /* 3 */ } /* 1. Change the font styles in all browsers. 2. Remove the margin in Firefox and Safari. 3. Remove default padding in all browsers. */ button, input, optgroup, select, textarea { font-family: inherit; /* 1 */ font-size: 100%; /* 1 */ line-height: inherit; /* 1 */ color: inherit; /* 1 */ margin: 0; /* 2 */ padding: 0; /* 3 */ } /* Remove the inheritance of text transform in Edge and Firefox. */ button, select { text-transform: none; } /* 1. Correct the inability to style clickable types in iOS and Safari. 2. Remove default button styles. */ button, [type='button'], [type='reset'], [type='submit'] { -webkit-appearance: button; /* 1 */ background-color: transparent; /* 2 */ background-image: none; /* 2 */ } /* Use the modern Firefox focus style for all focusable elements. */ :-moz-focusring { outline: auto; } /* Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737) */ :-moz-ui-invalid { box-shadow: none; } /* Add the correct vertical alignment in Chrome and Firefox. */ progress { vertical-align: baseline; } /* Correct the cursor style of increment and decrement buttons in Safari. */ ::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; } /* 1. Correct the odd appearance in Chrome and Safari. 2. Correct the outline style in Safari. */ [type='search'] { -webkit-appearance: textfield; /* 1 */ outline-offset: -2px; /* 2 */ } /* Remove the inner padding in Chrome and Safari on macOS. */ ::-webkit-search-decoration { -webkit-appearance: none; } /* 1. Correct the inability to style clickable types in iOS and Safari. 2. Change font properties to `inherit` in Safari. */ ::-webkit-file-upload-button { -webkit-appearance: button; /* 1 */ font: inherit; /* 2 */ } /* Add the correct display in Chrome and Safari. */ summary { display: list-item; } /* Removes the default spacing and border for appropriate elements. */ blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0; } fieldset { margin: 0; padding: 0; } legend { padding: 0; } ol, ul, menu { list-style: none; margin: 0; padding: 0; } /* Prevent resizing textareas horizontally by default. */ textarea { resize: vertical; } /* 1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300) 2. Set the default placeholder color to the user's configured gray 400 color. */ input::-moz-placeholder, textarea::-moz-placeholder { opacity: 1; /* 1 */ color: #9ca3af; /* 2 */ } input:-ms-input-placeholder, textarea:-ms-input-placeholder { opacity: 1; /* 1 */ color: #9ca3af; /* 2 */ } input::placeholder, textarea::placeholder { opacity: 1; /* 1 */ color: #9ca3af; /* 2 */ } /* Set the default cursor for buttons. */ button, [role="button"] { cursor: pointer; } /* Make sure disabled buttons don't get the pointer cursor. */ :disabled { cursor: default; } /* 1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14) 2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210) This can trigger a poorly considered lint error in some tools but is included by design. */ img, svg, video, canvas, audio, iframe, embed, object { display: block; /* 1 */ vertical-align: middle; /* 2 */ } /* Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14) */ img, video { max-width: 100%; height: auto; } /* Ensure the default browser behavior of the `hidden` attribute. */ [hidden] { display: none; } :root, [data-theme] { background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1)); color: hsla(var(--bc) / var(--tw-text-opacity, 1)); } html { -webkit-tap-highlight-color: transparent; } :root { --p: 262 80% 50%; --pf: 262 80% 40%; --sf: 316 70% 40%; --af: 175 70% 33%; --nf: 218 18% 10%; --b2: 220 18% 18%; --b3: 220 18% 16%; --bc: 220 49% 84%; --pc: 262 100% 90%; --sc: 316 100% 90%; --ac: 175 100% 8%; --nc: 218 27% 82%; --inc: 198 100% 12%; --suc: 158 100% 10%; --wac: 43 100% 11%; --erc: 0 100% 14%; --rounded-box: 1rem; --rounded-btn: 0.5rem; --rounded-badge: 1.9rem; --animation-btn: 0.25s; --animation-input: .2s; --btn-text-case: uppercase; --btn-focus-scale: 0.95; --border-btn: 1px; --tab-border: 1px; --tab-radius: 0.5rem; --s: 316 70% 50%; --a: 175 70% 41%; --n: 218 18% 12%; --b1: 220 18% 20%; --in: 198 93% 60%; --su: 158 64% 52%; --wa: 43 96% 56%; --er: 0 91% 71%; } * { scrollbar-color: initial; scrollbar-width: initial; } *, ::before, ::after { --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgb(59 130 246 / 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; } .container { width: 100%; } @media (min-width: 640px) { .container { max-width: 640px; } } @media (min-width: 768px) { .container { max-width: 768px; } } @media (min-width: 1024px) { .container { max-width: 1024px; } } @media (min-width: 1280px) { .container { max-width: 1280px; } } @media (min-width: 1536px) { .container { max-width: 1536px; } } .btn { display: inline-flex; flex-shrink: 0; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; flex-wrap: wrap; align-items: center; justify-content: center; border-color: transparent; border-color: hsl(var(--n) / var(--tw-border-opacity)); text-align: center; transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-duration: 200ms; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); border-radius: var(--rounded-btn, 0.5rem); height: 3rem; padding-left: 1rem; padding-right: 1rem; font-size: 0.875rem; line-height: 1.25rem; line-height: 1em; min-height: 3rem; font-weight: 600; text-transform: uppercase; text-transform: var(--btn-text-case, uppercase); -webkit-text-decoration-line: none; text-decoration-line: none; border-width: var(--border-btn, 1px); -webkit-animation: button-pop var(--animation-btn, 0.25s) ease-out; animation: button-pop var(--animation-btn, 0.25s) ease-out; --tw-border-opacity: 1; --tw-bg-opacity: 1; background-color: hsl(var(--n) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--nc) / var(--tw-text-opacity)); } .btn-disabled, .btn[disabled] { pointer-events: none; } .btn.loading, .btn.loading:hover { pointer-events: none; } .btn.loading:before { margin-right: 0.5rem; height: 1rem; width: 1rem; border-radius: 9999px; border-width: 2px; -webkit-animation: spin 2s linear infinite; animation: spin 2s linear infinite; content: ""; border-top-color: transparent; border-left-color: transparent; border-bottom-color: currentColor; border-right-color: currentColor; } @media (prefers-reduced-motion: reduce) { .btn.loading:before { -webkit-animation: spin 10s linear infinite; animation: spin 10s linear infinite; } } @-webkit-keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } .btn-group > input[type="radio"].btn { -webkit-appearance: none; -moz-appearance: none; appearance: none; } .btn-group > input[type="radio"].btn:before { content: attr(data-title); } .footer { display: grid; width: 100%; grid-auto-flow: row; place-items: start; row-gap: 2.5rem; -moz-column-gap: 1rem; column-gap: 1rem; font-size: 0.875rem; line-height: 1.25rem; } .footer > * { display: grid; place-items: start; gap: 0.5rem; } .footer-center { place-items: center; text-align: center; } .footer-center > * { place-items: center; } @media (min-width: 48rem) { .footer { grid-auto-flow: column; } .footer-center { grid-auto-flow: row dense; } } .hero { display: grid; width: 100%; place-items: center; background-size: cover; background-position: center; } .hero > * { grid-column-start: 1; grid-row-start: 1; } .link { cursor: pointer; -webkit-text-decoration-line: underline; text-decoration-line: underline; } .menu { display: flex; flex-direction: column; flex-wrap: wrap; } .menu.horizontal { display: inline-flex; flex-direction: row; } .menu.horizontal :where(li) { flex-direction: row; } .menu :where(li) { position: relative; display: flex; flex-shrink: 0; flex-direction: column; flex-wrap: wrap; align-items: stretch; } .menu :where(li:not(.menu-title)) > :where(*:not(ul)) { display: flex; } .menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) { cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; align-items: center; outline: 2px solid transparent; outline-offset: 2px; } .menu > :where(li > *:not(ul):focus) { outline: 2px solid transparent; outline-offset: 2px; } .menu > :where(li.disabled > *:not(ul):focus) { cursor: auto; } .menu > :where(li) :where(ul) { display: flex; flex-direction: column; align-items: stretch; } .menu > :where(li) > :where(ul) { position: absolute; display: none; top: initial; left: 100%; border-top-left-radius: inherit; border-top-right-radius: inherit; border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; } .menu > :where(li:hover) > :where(ul) { display: flex; } .menu > :where(li:focus) > :where(ul) { display: flex; } .navbar-start { width: 50%; justify-content: flex-start; } .navbar-center { flex-shrink: 0; } .navbar-end { width: 50%; justify-content: flex-end; } .swap { position: relative; display: inline-grid; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; place-content: center; cursor: pointer; } .swap > * { grid-column-start: 1; grid-row-start: 1; transition-duration: 300ms; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-property: transform, opacity; } .swap input { -webkit-appearance: none; -moz-appearance: none; appearance: none; } .swap .swap-on, .swap .swap-indeterminate, .swap input:indeterminate ~ .swap-on { opacity: 0; } .swap input:checked ~ .swap-off, .swap.swap-active .swap-off, .swap input:indeterminate ~ .swap-off { opacity: 0; } .swap input:checked ~ .swap-on, .swap-active .swap-on, .swap input:indeterminate ~ .swap-indeterminate { opacity: 1; } .toggle { flex-shrink: 0; --chkbg: hsla(var(--bc) / 0.2); --handleoffset: 1.5rem; height: 1.5rem; width: 3rem; cursor: pointer; -webkit-appearance: none; -moz-appearance: none; appearance: none; border-width: 1px; border-color: hsl(var(--bc) / var(--tw-border-opacity)); --tw-border-opacity: 0.2; background-color: hsl(var(--bc) / var(--tw-bg-opacity)); --tw-bg-opacity: 0.2; transition-duration: 300ms; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); border-radius: var(--rounded-badge, 1.9rem); transition: background, box-shadow var(--animation-input, 0.2s) ease-in-out; box-shadow: calc(var(--handleoffset) * -1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset; } .btn-outline .badge.outline { --tw-border-opacity: 1; border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity)); background-color: transparent; } .btn-outline:hover .badge.outline { --tw-border-opacity: 1; border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity)); --tw-text-opacity: 1; color: hsl(var(--nc) / var(--tw-text-opacity)); } .btn-outline.btn-primary:hover .badge.outline { --tw-border-opacity: 1; border-color: hsl(var(--pc) / var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--pc) / var(--tw-text-opacity)); } .btn-outline.btn-secondary:hover .badge.outline { --tw-border-opacity: 1; border-color: hsl(var(--sc) / var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--sc) / var(--tw-text-opacity)); } .btn-outline.btn-accent:hover .badge.outline { --tw-border-opacity: 1; border-color: hsl(var(--ac) / var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--ac) / var(--tw-text-opacity)); } .btn:active:hover, .btn:active:focus { -webkit-animation: none; animation: none; transform: scale(var(--btn-focus-scale, 0.95)); } .btn:hover, .btn-active { --tw-border-opacity: 1; border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity)); } .btn:focus-visible { outline: 2px solid hsl(var(--nf)); outline-offset: 2px; } .btn.glass:hover, .btn.glass.btn-active { --glass-opacity: 25%; --glass-border-opacity: 15%; } .btn.glass:focus-visible { outline: 2px solid currentColor; } .btn-disabled, .btn-disabled:hover, .btn[disabled], .btn[disabled]:hover { --tw-border-opacity: 0; background-color: hsl(var(--n) / var(--tw-bg-opacity)); --tw-bg-opacity: 0.2; color: hsl(var(--bc) / var(--tw-text-opacity)); --tw-text-opacity: 0.2; } .btn.loading.btn-square:before, .btn.loading.btn-circle:before { margin-right: 0px; } .btn.loading.btn-xl:before, .btn.loading.btn-lg:before { height: 1.25rem; width: 1.25rem; } .btn.loading.btn-sm:before, .btn.loading.btn-xs:before { height: 0.75rem; width: 0.75rem; } .btn-group > input[type="radio"].btn:checked, .btn-group > .btn-active { --tw-border-opacity: 1; border-color: hsl(var(--p) / var(--tw-border-opacity)); --tw-bg-opacity: 1; background-color: hsl(var(--p) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--pc) / var(--tw-text-opacity)); } .btn-group > input[type="radio"]:checked.btn:focus-visible, .btn-group > .btn-active:focus-visible { outline: 2px solid hsl(var(--p)); } @-webkit-keyframes button-pop { 0% { transform: scale(var(--btn-focus-scale, 0.95)); } 40% { transform: scale(1.02); } 100% { transform: scale(1); } } @keyframes button-pop { 0% { transform: scale(var(--btn-focus-scale, 0.95)); } 40% { transform: scale(1.02); } 100% { transform: scale(1); } } @-webkit-keyframes checkmark { 0% { background-position-y: 5px; } 50% { background-position-y: -2px; } 100% { background-position-y: 0; } } @keyframes checkmark { 0% { background-position-y: 5px; } 50% { background-position-y: -2px; } 100% { background-position-y: 0; } } .link:focus { outline: 2px solid transparent; outline-offset: 2px; } .link:focus-visible { outline: 2px solid currentColor; outline-offset: 2px; } .menu.horizontal li.bordered > a, .menu.horizontal li.bordered > button, .menu.horizontal li.bordered > span { border-left-width: 0px; border-bottom-width: 4px; --tw-border-opacity: 1; border-color: hsl(var(--p) / var(--tw-border-opacity)); } .menu[class*=" p-"] li > *, .menu[class^="p-"] li > * { border-radius: var(--rounded-btn, 0.5rem); } .menu :where(li.bordered > *) { border-left-width: 4px; --tw-border-opacity: 1; border-color: hsl(var(--p) / var(--tw-border-opacity)); } .menu :where(li) > :where(*:not(ul)) { gap: 0.75rem; padding-left: 1rem; padding-right: 1rem; padding-top: 0.75rem; padding-bottom: 0.75rem; color: currentColor; } .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus), .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) { background-color: hsl(var(--bc) / var(--tw-bg-opacity)); --tw-bg-opacity: 0.1; } .menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active), .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) { --tw-bg-opacity: 1; background-color: hsl(var(--p) / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: hsl(var(--pc) / var(--tw-text-opacity)); } .menu :where(li:empty) { margin-left: 1rem; margin-right: 1rem; margin-top: 0.5rem; margin-bottom: 0.5rem; height: 1px; background-color: hsl(var(--bc) / var(--tw-bg-opacity)); --tw-bg-opacity: 0.1; } .menu li.disabled > * { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; color: hsl(var(--bc) / var(--tw-text-opacity)); --tw-text-opacity: 0.2; } .menu li.disabled > *:hover { background-color: transparent; } .menu li.hover-bordered a { border-left-width: 4px; border-color: transparent; } .menu li.hover-bordered a:hover { --tw-border-opacity: 1; border-color: hsl(var(--p) / var(--tw-border-opacity)); } .menu.compact li > a, .menu.compact li > span { padding-top: 0.5rem; padding-bottom: 0.5rem; font-size: 0.875rem; line-height: 1.25rem; } .menu .menu-title > * { padding-top: 0.25rem; padding-bottom: 0.25rem; font-size: 0.75rem; line-height: 1rem; font-weight: 700; color: hsl(var(--bc) / var(--tw-text-opacity)); --tw-text-opacity: 0.4; } .menu :where(li:not(.disabled)) > :where(*:not(ul)) { outline: 2px solid transparent; outline-offset: 2px; transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-duration: 200ms; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); } .menu > :where(li:first-child) { border-top-left-radius: inherit; border-top-right-radius: inherit; border-bottom-right-radius: unset; border-bottom-left-radius: unset; } .menu > :where(li:first-child) > :where(:not(ul)) { border-top-left-radius: inherit; border-top-right-radius: inherit; border-bottom-right-radius: unset; border-bottom-left-radius: unset; } .menu > :where(li:last-child) { border-top-left-radius: unset; border-top-right-radius: unset; border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; } .menu > :where(li:last-child) > :where(:not(ul)) { border-top-left-radius: unset; border-top-right-radius: unset; border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; } .menu > :where(li) > :where(ul) :where(li) { width: 100%; white-space: nowrap; } .menu > :where(li) > :where(ul) :where(li) :where(ul) { padding-left: 1rem; } .menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) { width: 100%; white-space: nowrap; } .menu > :where(li) > :where(ul) > :where(li:first-child) { border-top-left-radius: inherit; border-top-right-radius: inherit; border-bottom-right-radius: unset; border-bottom-left-radius: unset; } .menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) { border-top-left-radius: inherit; border-top-right-radius: inherit; border-bottom-right-radius: unset; border-bottom-left-radius: unset; } .menu > :where(li) > :where(ul) > :where(li:last-child) { border-top-left-radius: unset; border-top-right-radius: unset; border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; } .menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) { border-top-left-radius: unset; border-top-right-radius: unset; border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; } .mockup-phone .display { overflow: hidden; border-radius: 40px; margin-top: -25px; } @-webkit-keyframes progress-loading { 50% { left: 107%; } } @keyframes progress-loading { 50% { left: 107%; } } @-webkit-keyframes radiomark { 0% { box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset; } 50% { box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset; } 100% { box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset; } } @keyframes radiomark { 0% { box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset; } 50% { box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset; } 100% { box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset; } } @-webkit-keyframes rating-pop { 0% { transform: translateY(-0.125em); } 40% { transform: translateY(-0.125em); } 100% { transform: translateY(0); } } @keyframes rating-pop { 0% { transform: translateY(-0.125em); } 40% { transform: translateY(-0.125em); } 100% { transform: translateY(0); } } @-webkit-keyframes toast-pop { 0% { transform: scale(0.9); opacity: 0; } 100% { transform: scale(1); opacity: 1; } } @keyframes toast-pop { 0% { transform: scale(0.9); opacity: 0; } 100% { transform: scale(1); opacity: 1; } } .toggle:focus-visible { outline: 2px solid hsl(var(--bc)); outline-offset: 2px; } .toggle:checked, .toggle[checked="true"], .toggle[aria-checked=true] { --chkbg: hsl(var(--bc)); --tw-border-opacity: 1; --tw-bg-opacity: 1; box-shadow: var(--handleoffset) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset; } [dir="rtl"] .toggle:checked, [dir="rtl"] .toggle[checked="true"], [dir="rtl"] .toggle[aria-checked=true] { box-shadow: calc(var(--handleoffset) * 1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset; } .toggle:indeterminate { --chkbg: hsl(var(--bc)); --tw-border-opacity: 1; --tw-bg-opacity: 1; box-shadow: calc(var(--handleoffset) / 2) 0 0 2px hsl(var(--b1)) inset, calc(var(--handleoffset) / -2) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset; } [dir="rtl"] .toggle:indeterminate { box-shadow: calc(var(--handleoffset) / 2) 0 0 2px hsl(var(--b1)) inset, calc(var(--handleoffset) / -2) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset; } .toggle:disabled { cursor: not-allowed; border-color: transparent; background-color: hsl(var(--bc) / var(--tw-bg-opacity)); --tw-bg-opacity: 0.2; } .btn-sm { height: 2rem; padding-left: 0.75rem; padding-right: 0.75rem; min-height: 2rem; font-size: 0.875rem; } .btn-square:where(.btn-sm) { height: 2rem; width: 2rem; padding: 0px; } .btn-circle:where(.btn-sm) { height: 2rem; width: 2rem; border-radius: 9999px; padding: 0px; } .btn-group .btn:not(:first-child):not(:last-child), .btn-group.btn-group-horizontal .btn:not(:first-child):not(:last-child) { border-top-left-radius: 0; border-top-right-radius: 0; border-bottom-left-radius: 0; border-bottom-right-radius: 0; } .btn-group .btn:first-child:not(:last-child), .btn-group.btn-group-horizontal .btn:first-child:not(:last-child) { margin-left: -1px; margin-top: -0px; border-top-left-radius: var(--rounded-btn, 0.5rem); border-top-right-radius: 0; border-bottom-left-radius: var(--rounded-btn, 0.5rem); border-bottom-right-radius: 0; } .btn-group .btn:last-child:not(:first-child), .btn-group.btn-group-horizontal .btn:last-child:not(:first-child) { border-top-left-radius: 0; border-top-right-radius: var(--rounded-btn, 0.5rem); border-bottom-left-radius: 0; border-bottom-right-radius: var(--rounded-btn, 0.5rem); } .btn-group.btn-group-vertical .btn:first-child:not(:last-child) { margin-left: -0px; margin-top: -1px; border-top-left-radius: var(--rounded-btn, 0.5rem); border-top-right-radius: var(--rounded-btn, 0.5rem); border-bottom-left-radius: 0; border-bottom-right-radius: 0; } .btn-group.btn-group-vertical .btn:last-child:not(:first-child) { border-top-left-radius: 0; border-top-right-radius: 0; border-bottom-left-radius: var(--rounded-btn, 0.5rem); border-bottom-right-radius: var(--rounded-btn, 0.5rem); } .pointer-events-none { pointer-events: none; } .pointer-events-auto { pointer-events: auto; } .fixed { position: fixed; } .absolute { position: absolute; } .relative { position: relative; } .inset-x-0 { left: 0px; right: 0px; } .top-0 { top: 0px; } .top-5 { top: 1.25rem; } .right-5 { right: 1.25rem; } .z-10 { z-index: 10; } .z-\[999\] { z-index: 999; } .col-span-1 { grid-column: span 1 / span 1; } .col-span-2 { grid-column: span 2 / span 2; } .m-5 { margin: 1.25rem; } .m-3 { margin: 0.75rem; } .m-2 { margin: 0.5rem; } .mx-10 { margin-left: 2.5rem; margin-right: 2.5rem; } .mx-20 { margin-left: 5rem; margin-right: 5rem; } .mx-8 { margin-left: 2rem; margin-right: 2rem; } .my-2 { margin-top: 0.5rem; margin-bottom: 0.5rem; } .mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; } .my-3 { margin-top: 0.75rem; margin-bottom: 0.75rem; } .mx-auto { margin-left: auto; margin-right: auto; } .mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; } .mx-4 { margin-left: 1rem; margin-right: 1rem; } .mx-5 { margin-left: 1.25rem; margin-right: 1.25rem; } .my-4 { margin-top: 1rem; margin-bottom: 1rem; } .my-5 { margin-top: 1.25rem; margin-bottom: 1.25rem; } .my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem; } .my-20 { margin-top: 5rem; margin-bottom: 5rem; } .mt-5 { margin-top: 1.25rem; } .mr-8 { margin-right: 2rem; } .mb-6 { margin-bottom: 1.5rem; } .mb-2 { margin-bottom: 0.5rem; } .mt-4 { margin-top: 1rem; } .block { display: block; } .inline-block { display: inline-block; } .flex { display: flex; } .grid { display: grid; } .hidden { display: none; } .h-5 { height: 1.25rem; } .h-6 { height: 1.5rem; } .h-screen { height: 100vh; } .h-full { height: 100%; } .h-60 { height: 15rem; } .h-\[500px\] { height: 500px; } .h-20 { height: 5rem; } .h-8 { height: 2rem; } .h-12 { height: 3rem; } .h-10 { height: 2.5rem; } .max-h-40 { max-height: 10rem; } .w-\[80\%\] { width: 80%; } .w-5 { width: 1.25rem; } .w-6 { width: 1.5rem; } .w-full { width: 100%; } .w-56 { width: 14rem; } .w-\[540px\] { width: 540px; } .w-\[480px\] { width: 480px; } .w-\[400px\] { width: 400px; } .w-8 { width: 2rem; } .w-auto { width: auto; } .shrink-0 { flex-shrink: 0; } .rotate-\[8deg\] { --tw-rotate: 8deg; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .-rotate-3 { --tw-rotate: -3deg; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .scale-75 { --tw-scale-x: .75; --tw-scale-y: .75; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .cursor-pointer { cursor: pointer; } .grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); } .grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)); } .flex-col { flex-direction: column; } .items-center { align-items: center; } .justify-end { justify-content: flex-end; } .justify-center { justify-content: center; } .gap-2 { gap: 0.5rem; } .gap-4 { gap: 1rem; } .overflow-x-hidden { overflow-x: hidden; } .rounded-3xl { border-radius: 1.5rem; } .rounded-lg { border-radius: 0.5rem; } .rounded-xl { border-radius: 0.75rem; } .border-none { border-style: none; } .bg-\[\#f8f8f8\] { --tw-bg-opacity: 1; background-color: rgb(248 248 248 / var(--tw-bg-opacity)); } .bg-\[\#a3a3a3\] { --tw-bg-opacity: 1; background-color: rgb(163 163 163 / var(--tw-bg-opacity)); } .bg-\[\#6c7de0\] { --tw-bg-opacity: 1; background-color: rgb(108 125 224 / var(--tw-bg-opacity)); } .bg-\[\#ededed\] { --tw-bg-opacity: 1; background-color: rgb(237 237 237 / var(--tw-bg-opacity)); } .bg-black { --tw-bg-opacity: 1; background-color: rgb(0 0 0 / var(--tw-bg-opacity)); } .bg-\[\#dadada\] { --tw-bg-opacity: 1; background-color: rgb(218 218 218 / var(--tw-bg-opacity)); } .bg-\[\#d1d1d1\] { --tw-bg-opacity: 1; background-color: rgb(209 209 209 / var(--tw-bg-opacity)); } .bg-\[\#5865F2\] { --tw-bg-opacity: 1; background-color: rgb(88 101 242 / var(--tw-bg-opacity)); } .bg-slate-100 { --tw-bg-opacity: 1; background-color: rgb(241 245 249 / var(--tw-bg-opacity)); } .bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--tw-bg-opacity)); } .bg-opacity-30 { --tw-bg-opacity: 0.3; } .bg-opacity-70 { --tw-bg-opacity: 0.7; } .bg-opacity-20 { --tw-bg-opacity: 0.2; } .bg-gradient-to-r { background-image: linear-gradient(to right, var(--tw-gradient-stops)); } .bg-gradient-to-t { background-image: linear-gradient(to top, var(--tw-gradient-stops)); } .from-fuchsia-600 { --tw-gradient-from: #0095ff; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(192 38 211 / 0)); } .from-fuchsia-500 { --tw-gradient-from: #00bbff; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(217 70 239 / 0)); } .from-zinc-900 { --tw-gradient-from: #18181b; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(24 24 27 / 0)); } .to-blue-600 { --tw-gradient-to: #00ccff; } .to-zinc-400 { --tw-gradient-to: #a1a1aa; } .bg-clip-text { -webkit-background-clip: text; background-clip: text; } .unselectable { -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .fill-white { fill: #fff; } .p-2\.5 { padding: 0.625rem; } .p-2 { padding: 0.5rem; } .p-4 { padding: 1rem; } .py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; } .px-4 { padding-left: 1rem; padding-right: 1rem; } .py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; } .pb-10 { padding-bottom: 2.5rem; } .pt-20 { padding-top: 5rem; } .pt-40 { padding-top: 10rem; } .pb-24 { padding-bottom: 6rem; } .pt-5 { padding-top: 1.25rem; } .text-center { text-align: center; } .font-mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; } .text-2xl { font-size: 1.5rem; line-height: 2rem; } .text-3xl { font-size: 1.875rem; line-height: 2.25rem; } .text-lg { font-size: 1.125rem; line-height: 1.75rem; } .text-sm { font-size: 0.875rem; line-height: 1.25rem; } .text-xl { font-size: 1.25rem; line-height: 1.75rem; } .text-4xl { font-size: 2.25rem; line-height: 2.5rem; } .text-xs { font-size: 0.75rem; line-height: 1rem; } .font-normal { font-weight: 400; } .font-bold { font-weight: 700; } .italic { font-style: italic; } .tracking-widest { letter-spacing: 0.1em; } .tracking-wide { letter-spacing: 0.025em; } .tracking-wider { letter-spacing: 0.05em; } .text-black { --tw-text-opacity: 1; color: rgb(0 0 0 / var(--tw-text-opacity)); } .text-transparent { color: transparent; } .text-gray-700 { --tw-text-opacity: 1; color: rgb(55 65 81 / var(--tw-text-opacity)); } .text-red-600 { --tw-text-opacity: 1; color: rgb(220 38 38 / var(--tw-text-opacity)); } .text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); } .text-gray-400 { --tw-text-opacity: 1; color: rgb(156 163 175 / var(--tw-text-opacity)); } .text-zinc-600 { --tw-text-opacity: 1; color: rgb(82 82 91 / var(--tw-text-opacity)); } .text-gray-800 { --tw-text-opacity: 1; color: rgb(31 41 55 / var(--tw-text-opacity)); } .text-cyan-400 { --tw-text-opacity: 1; color: rgb(34 211 238 / var(--tw-text-opacity)); } .opacity-10 { opacity: 0.1; } .outline-none { outline: 2px solid transparent; outline-offset: 2px; } .outline { outline-style: solid; } .outline-1 { outline-width: 1px; } .outline-2 { outline-width: 2px; } .outline-0 { outline-width: 0px; } .outline-\[\#aaaaaa\] { outline-color: #aaaaaa; } .outline-\[\#6c7de0\] { outline-color: #6c7de0; } .backdrop-blur-lg { --tw-backdrop-blur: blur(16px); -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); } .backdrop-filter { -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); } .transition { transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; } .duration-500 { transition-duration: 500ms; } .duration-300 { transition-duration: 300ms; } .scrollbar.overflow-x-hidden { overflow-x: hidden; } .scrollbar-thin.overflow-x-hidden { overflow-x: hidden; } * { font-family: 'Poppins', sans-serif; scroll-behavior: smooth; } .shadow_primary { box-shadow: rgba(0, 0, 0, 0.4) 0px 30px 90px; } ::-webkit-scrollbar { width: 3px; background: #121212; } ::-webkit-scrollbar-thumb { border-radius: 20px; background: linear-gradient(0deg, rgba(0, 102, 255, 1) 0%, rgba(0, 149, 255, 1) 25%, rgba(0, 179, 255, 1) 50%, rgba(0, 149, 255, 1) 100%); box-shadow: inset 2px 2px 2px rgba(255, 255, 255, 0.25), inset -2px -2px -2px rgba(0, 0, 0, 0.25); } .poppins-300 { font-family: 'Poppins', sans-serif; font-weight: 300; font-size: 16px; } .poppins-bold { font-family: "Poppins", sans-serif; font-weight: 700; } .poppins-normal { font-family: "Poppins", sans-serif; font-weight: 500; } .permanent-marker { font-family: 'Permanent Marker', cursive; } .btn-discord { font-family: 'Poppins', sans-serif; font-weight: 700; font-size: 16px; color: white; } .background-animate { -webkit-animation: AnimationName 3s ease infinite; animation: AnimationName 3s ease infinite; background-size: 300%; } @-webkit-keyframes AnimationName { 0%, to { background-position: 0 50% } 50% { background-position: 100% 50% } } @keyframes AnimationName { 0%, to { background-position: 0 50% } 50% { background-position: 100% 50% } } .rainbow { color: #0066ff; animation: animateColor 5s linear infinite; } @keyframes animateColor { 0% { filter: hue-rotate(0deg); } 100% { filter: hue-rotate(360deg); } } @-webkit-keyframes hueanimation { from { -webkit-filter: hue-rotate(0deg); } to { -webkit-filter: hue-rotate(360deg); } } @keyframes hueanimation { from { -webkit-filter: hue-rotate(0deg); } to { -webkit-filter: hue-rotate(360deg); } } @-webkit-keyframes flip { 0% { transform: perspective(400px) rotate3d(0, 1, 0, -360deg); -webkit-animation-timing-function: ease-out; animation-timing-function: ease-out; } 40% { transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg); -webkit-animation-timing-function: ease-out; animation-timing-function: ease-out; } 50% { transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } 80% { transform: perspective(400px) scale3d(0.95, 0.95, 0.95); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } 100% { transform: perspective(400px); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } } @keyframes flip { 0% { transform: perspective(400px) rotate3d(0, 1, 0, -360deg); -webkit-animation-timing-function: ease-out; animation-timing-function: ease-out; } 40% { transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg); -webkit-animation-timing-function: ease-out; animation-timing-function: ease-out; } 50% { transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } 80% { transform: perspective(400px) scale3d(0.95, 0.95, 0.95); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } 100% { transform: perspective(400px); -webkit-animation-timing-function: ease-in; animation-timing-function: ease-in; } } .animated.flip { -webkit-backface-visibility: visible; backface-visibility: visible; -webkit-animation-name: flip; animation-name: flip; } .animated { -webkit-animation-duration: 1.2s; animation-duration: 1.2s; -webkit-animation-fill-mode: both; animation-fill-mode: both; } @-webkit-keyframes tada { 0% { transform: scale3d(1, 1, 1); } 10%, 20% { transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg); } 30%, 50%, 70%, 90% { transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg); } 40%, 60%, 80% { transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg); } 100% { transform: scale3d(1, 1, 1); } } @keyframes tada { 0% { transform: scale3d(1, 1, 1); } 10%, 20% { transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg); } 30%, 50%, 70%, 90% { transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg); } 40%, 60%, 80% { transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg); } 100% { transform: scale3d(1, 1, 1); } } .tada { -webkit-animation-name: tada; animation-name: tada; } @-webkit-keyframes gradient { to { background-position: 200% } } @keyframes gradient { to { background-position: 200% } } .animate-gradient { -webkit-animation: gradient 6s linear infinite; animation: gradient 6s linear infinite; -webkit-text-fill-color: transparent; background: linear-gradient(270deg, #1a84b8, #1a8cb8 25.52%, #1a94b8 50%, #1a9cb8 76.04%, #1a84b8); -webkit-background-clip: text; background-clip: text; background-size: 200% auto } @-webkit-keyframes fly { 0%, to { transform: translateY(5%) } 50% { transform: translateY(0) } } @keyframes fly { 0%, to { transform: translateY(5%) } 50% { transform: translateY(0) } } .animate-fly { -webkit-animation: fly 6s cubic-bezier(.75, .02, .31, .87) infinite; animation: fly 6s cubic-bezier(.75, .02, .31, .87) infinite } .wave { -webkit-animation-name: wave-animation; animation-name: wave-animation; /* Refers to the name of your @keyframes element below */ -webkit-animation-duration: 2.5s; animation-duration: 2.5s; /* Change to speed up or slow down */ -webkit-animation-iteration-count: infinite; animation-iteration-count: infinite; /* Never stop waving :) */ transform-origin: 70% 70%; /* Pivot around the bottom-left palm */ display: inline-block; } @-webkit-keyframes wave-animation { 0% { transform: rotate(0.0deg) } 10% { transform: rotate(14.0deg) } /* The following five values can be played with to make the waving more or less extreme */ 20% { transform: rotate(-8.0deg) } 30% { transform: rotate(14.0deg) } 40% { transform: rotate(-4.0deg) } 50% { transform: rotate(10.0deg) } 60% { transform: rotate(0.0deg) } /* Reset for the last half to pause */ 100% { transform: rotate(0.0deg) } } @keyframes wave-animation { 0% { transform: rotate(0.0deg) } 10% { transform: rotate(14.0deg) } /* The following five values can be played with to make the waving more or less extreme */ 20% { transform: rotate(-8.0deg) } 30% { transform: rotate(14.0deg) } 40% { transform: rotate(-4.0deg) } 50% { transform: rotate(10.0deg) } 60% { transform: rotate(0.0deg) } /* Reset for the last half to pause */ 100% { transform: rotate(0.0deg) } } .navbarr { display: flex; position: fixed; align-items: center; padding: var(--navbar-padding, 0.5rem); min-height: 4rem; z-index: 999; } :where(.navbarr > *) { display: inline-flex; align-items: center; } .spinner { width: 56px; height: 56px; display: grid; border: 4.5px solid #0000; border-radius: 50%; border-color: #0095ff #0000; -webkit-animation: spinner-e04l1k 1s infinite linear; animation: spinner-e04l1k 1s infinite linear; } .spinner::before, .spinner::after { content: ""; grid-area: 1/1; margin: 2.2px; border: inherit; border-radius: 50%; } .spinner::before { border-color: #0095ff #0000; -webkit-animation: inherit; animation: inherit; -webkit-animation-duration: 0.5s; animation-duration: 0.5s; animation-direction: reverse; } .spinner::after { margin: 8.9px; } @-webkit-keyframes spinner-e04l1k { 100% { transform: rotate(1turn); } } @keyframes spinner-e04l1k { 100% { transform: rotate(1turn); } } .loading { position: fixed; top: 0; bottom: 0; left: 0; right: 0; background-color: #171717; display: flex; align-items: center; justify-content: center; z-index: 999999; } .hover\:scale-110:hover { --tw-scale-x: 1.1; --tw-scale-y: 1.1; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .hover\:scale-105:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .hover\:bg-slate-100:hover { --tw-bg-opacity: 1; background-color: rgb(241 245 249 / var(--tw-bg-opacity)); } .hover\:bg-gradient-to-r:hover { background-image: linear-gradient(to right, var(--tw-gradient-stops)); } .hover\:from-fuchsia-600:hover { --tw-gradient-from: #0095ff; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(192 38 211 / 0)); } .hover\:to-blue-600:hover { --tw-gradient-to: #0095ff; } .hover\:bg-clip-text:hover { -webkit-background-clip: text; background-clip: text; } .hover\:text-transparent:hover { color: transparent; } .hover\:text-\[\#6c7de0\]:hover { --tw-text-opacity: 1; color: rgb(108 125 224 / var(--tw-text-opacity)); } .hover\:outline-dashed:hover { outline-style: dashed; } .hover\:transition:hover { transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; } .hover\:duration-300:hover { transition-duration: 300ms; } .dark .dark\:block { display: block; } .dark .dark\:bg-\[\#171717\] { --tw-bg-opacity: 1; background-color: rgb(23 23 23 / var(--tw-bg-opacity)); } .dark .dark\:bg-\[\#1b1b1b\] { --tw-bg-opacity: 1; background-color: rgb(27 27 27 / var(--tw-bg-opacity)); } .dark .dark\:bg-\[\#252525\] { --tw-bg-opacity: 1; background-color: rgb(37 37 37 / var(--tw-bg-opacity)); } .dark .dark\:bg-\[\#0a1321\] { --tw-bg-opacity: 1; background-color: rgb(10 19 33 / var(--tw-bg-opacity)); } .dark .dark\:bg-opacity-30 { --tw-bg-opacity: 0.3; } .dark .dark\:bg-opacity-90 { --tw-bg-opacity: 0.9; } .dark .dark\:text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); } .dark .dark\:text-amber-300 { --tw-text-opacity: 1; color: rgb(252 211 77 / var(--tw-text-opacity)); } .dark .dark\:text-slate-400 { --tw-text-opacity: 1; color: rgb(148 163 184 / var(--tw-text-opacity)); } .dark .dark\:text-gray-400 { --tw-text-opacity: 1; color: rgb(156 163 175 / var(--tw-text-opacity)); } .dark .dark\:text-zinc-400 { --tw-text-opacity: 1; color: rgb(161 161 170 / var(--tw-text-opacity)); } .dark .dark\:outline-1 { outline-width: 1px; } .dark .dark\:outline-\[\#222222\] { outline-color: #222222; } .dark .dark\:outline-zinc-800 { outline-color: #27272a; } .dark .dark\:backdrop-blur-lg { --tw-backdrop-blur: blur(16px); -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); } .dark .dark\:backdrop-filter { -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); } .dark .dark\:hover\:bg-transparent:hover { background-color: transparent; } @media (min-width: 640px) { .sm\:w-\[90\%\] { width: 90%; } .sm\:w-full { width: 100%; } .sm\:text-6xl { font-size: 3.75rem; line-height: 1; } .sm\:text-2xl { font-size: 1.5rem; line-height: 2rem; } } @media (min-width: 768px) { .md\:col-span-1 { grid-column: span 1 / span 1; } .md\:mx-32 { margin-left: 8rem; margin-right: 8rem; } .md\:my-0 { margin-top: 0px; margin-bottom: 0px; } .md\:my-8 { margin-top: 2rem; margin-bottom: 2rem; } .md\:mx-0 { margin-left: 0px; margin-right: 0px; } .md\:mb-8 { margin-bottom: 2rem; } .md\:mt-8 { margin-top: 2rem; } .md\:h-40 { height: 10rem; } .md\:max-h-32 { max-height: 8rem; } .md\:w-32 { width: 8rem; } .md\:w-\[540px\] { width: 540px; } .md\:scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); } .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); } .md\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); } .md\:flex-row { flex-direction: row; } .md\:items-start { align-items: flex-start; } .md\:items-center { align-items: center; } .md\:py-0 { padding-top: 0px; padding-bottom: 0px; } .md\:pt-32 { padding-top: 8rem; } .md\:pl-8 { padding-left: 2rem; } .md\:pt-40 { padding-top: 10rem; } .md\:text-left { text-align: left; } .md\:text-right { text-align:"right" } .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; } .md\:text-8xl { font-size: 6rem; line-height: 1; } .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; } } @media (min-width: 1024px) { .lg\:mx-32 { margin-left: 8rem; margin-right: 8rem; } .lg\:flex { display: flex; } .lg\:hidden { display: none; } .lg\:h-\[88vh\] { height: 88vh; } .lg\:w-\[24rem\] { width: 24rem; } .lg\:w-\[26rem\] { width: 26rem; } .lg\:text-6xl { font-size: 3.75rem; line-height: 1; } } @media (min-width: 1280px) { .xl\:mx-32 { margin-left: 8rem; margin-right: 8rem; } .xl\:w-\[32rem\] { width: 32rem; } .xl\:w-\[37rem\] { width: 37rem; } .xl\:text-7xl { font-size: 4.5rem; line-height: 1; } } @media (min-width: 1536px) { .\32xl\:w-\[36rem\] { width: 36rem; } .\32xl\:w-\[39rem\] { width: 39rem; } } .scrollbar-hide::-webkit-scrollbar { display: none; } .scrollbar-hide { -ms-overflow-style: none; scrollbar-width: none; } .project-card:hover .action-buttons { display: flex; } .category-button { background-color: #1E40AF; /* Niebieski */ color: white; transition: all 0.3s ease; } .category-button:hover, .category-button-active { background-color: white; color: #1E40AF; /* Niebieski */ border: 2px solid #1E40AF; } .group:hover .group-hover\:blur-sm { filter: blur(4px); } .group:hover .group-hover\:brightness-50 { filter: brightness(50%); } .group:hover .action-buttons { display: flex; justify-content: center; align-items: center; position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5); } #progress-bar { transition: width 0.3s ease; } button#scroll-left, button#scroll-right { width: 40px; height: 40px; }
/* From Uiverse.io by 0800Gonza */ 
.card {
  width: fit-content;
  height: fit-content;
  background-color: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 25px 25px;
  gap: 20px;
}

/* for all social containers*/
.socialContainer {
  width: 230px;
  height: 230px;
  border-radius: 50%;
  background-color: rgb(44, 44, 44);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  transition-duration: 1s;
  margin-left: 460;
}
/* instagram*/
.containerOne:hover {
  background-color: #d62976;
  transition-duration: 0.3s;
}

/* linkdin*/
.containerThree:hover {
  background-color: #0072b1;
  transition-duration: 0.3s;
}


.socialContainer:active {
  transform: scale(0.9);
  transition-duration: 0.3s;
}

.socialSvg {
  width: 17px;
}

.socialSvg path {
  fill: rgb(255, 255, 255);
}

.socialContainer:hover .socialSvg {
  animation: slide-in-top 0.3s both;
}

@keyframes slide-in-top {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* From Uiverse.io by Randdose */ 
.button {
  all: unset;
  display: flex;
  align-items: center;
  position: relative;
  padding: 0.6em 2em;
  border: mediumspringgreen solid 0.15em;
  border-radius: 0.25em;
  color: mediumspringgreen;
  font-size: 1.5em;
  font-weight: 600;
  cursor: pointer;
  overflow: hidden;
  transition: border 300ms, color 300ms;
  user-select: none;
  margin-left: -563;
  margin-top: 0;
  
}

.button p {
  z-index: 1;
}

.button:hover {
  color: #212121;
}

.button:active {
  border-color: teal;
}

.button::after, .button::before {
  content: "";
  position: absolute;
  width: 9em;
  aspect-ratio: 1;
  background: mediumspringgreen;
  opacity: 50%;
  border-radius: 50%;
  transition: transform 500ms, background 300ms;
}

.button::before {
  left: 0;
  transform: translateX(-8em);
}

.button::after {
  right: 0;
  transform: translateX(8em);
}

.button:hover:before {
  transform: translateX(-1em);
}

.button:hover:after {
  transform: translateX(1em);
}

.button:active:before,
.button:active:after {
  background: teal;
}
